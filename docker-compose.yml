version: "3.3"

services:
  app:
    build:
      context: .
    hostname: app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
      - .env:/app/.env
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - DEBUG=1

    depends_on:
      - db
      - redis
    networks:
      - live

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
    env_file:
      - .env
    networks:
      - live

  redis:
    image: 'redis:6.0-alpine'
    hostname: redis
    networks:
      - live

  celery:
    build:
      context: .
    command: "celery -A app worker -l info"
    depends_on:
      - app
      - redis
      - db
    restart: on-failure
    networks:
      - live

  flower:
    build:
      context: .
    ports:
      - '5555:5555'
    command: "celery -A app flower --address=0.0.0.0"
    depends_on:
      - celery
    networks:
      - live

volumes:
  dev-db-data:
  dev-static-data:
  .env:

networks:
  live:
